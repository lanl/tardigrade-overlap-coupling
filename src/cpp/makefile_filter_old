# Micromorphic filter, a variationally based filter for DNS
#
# run: 'make -f makefile_filter full' to do a full build 
# including liboverlap. This can fail if voro++ has been 
# built in debug mode (METHOD=dbg make ...).
#
# To build the debug version of the library run 
# 'METHOD=dbg make -f makefile_filter full'
# 
# Author: Nathan A. Miller (LANL / CU Boulder)
# Email:  nathanm@lanl.gov
# Date:   July 13, 2018
#
# This is the makefile for processDNS.cpp. It generates the 
# micromorphic filter

include ../../config.mk

# List of executables
EXECUTABLE=filter.out
OBJECTS=assembly.o filter.o
#LOCAL_CFLAGS=-I. -O3 -flto -fpic -Wall
LOCAL_CFLAGS=-I. -O3 -fpic -Wall

#Set the mode due to the method variable
DBG = 
ifeq ($(METHOD),dbg)
  DBG = -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -g
endif
ifeq ($(METHOD),oprof)
  DBG = -pg
endif
export METHOD

#Define the library name
SONAME=liboverlap.so
SOVERSION=liboverlap.so.1

# Makefile rules
.PHONY : clearscr build_library clean all

all: $(EXECUTABLE)

$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(STD) $(CFLAGS) $(LOCAL_CFLAGS) $(ERRORFLG) $(DBG) $(INC) $(LIB) $(EIGEN) $^ -o $@ -lstdc++ -std=gnu++11 -lvoro++ -loverlap

filter.o: filter_old.cpp filter_old.h overlap_coupling.h assembly.h
	$(CXX) $(LOCAL_CFLAGS) $(EIGEN) $(INC) $(LIB) $(DBG) -c -o $@ $< $(CFLAGS) -lstdc++ -std=gnu++11 -lvoro++ -loverlap

assembly.o: assembly.cpp assembly.h
	$(CXX) $(LOCAL_CFLAGS) $(EIGEN) $(INC) $(LIB) $(DBG) -c -o $@ $< $(CFLAGS) -lstdc++ -std=gnu++11

clean:
	rm -f $(OBJECTS)
	rm -f $(EXECUTABLE)

deep_clean:
	make -f makefile clean
	rm -f $(SONAME) $(SOVERSION)
	rm -f $(OBJECTS)
	rm -f $(EXECUTABLE)

clearscr:
	clear

build_library:
	export METHOD
	make -f makefile

full: clearscr build_library all

.PHONY: all clean
